#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./server-manage.sh [start|stop|restart|logs|status|update|backup]

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_IP="185.179.83.236"
SERVER_USER="root"
APP_PATH="/opt/contract-app"
SSH_KEY="~/.ssh/id_rsa_deploy"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
run_on_server() {
    ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} "$1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo -e "${BLUE}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]${NC}"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  update    - –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å Git"
    echo "  deploy    - –î–µ–ø–ª–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ç–∫–∏/—Ç–µ–≥–∞"
    echo "  backup    - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "  ssl       - –û–±–Ω–æ–≤–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    echo "  shell     - –û—Ç–∫—Ä—ã—Ç—å shell –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start_app() {
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...${NC}"
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml up -d"
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
stop_app() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...${NC}"
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml down"
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
restart_app() {
    echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...${NC}"
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml restart"
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo -e "${YELLOW}üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml ps"
    
    echo -e "\n${YELLOW}üìà –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
    run_on_server "docker stats --no-stream --format 'table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}'"
    
    echo -e "\n${YELLOW}üåø Git —Å—Ç–∞—Ç—É—Å:${NC}"
    run_on_server "cd ${APP_PATH} && git status --short && echo '---' && git log --oneline -5"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo -e "${YELLOW}üìù –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml logs --tail=50"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
update_app() {
    echo -e "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    stop_app
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
    CURRENT_BRANCH=$(git branch --show-current 2>/dev/null || echo "master")
    echo -e "${YELLOW}–û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ç–∫—É: ${CURRENT_BRANCH}${NC}"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ —Å Git
    run_on_server "cd ${APP_PATH} && git fetch origin && git reset --hard origin/${CURRENT_BRANCH} && git clean -fd"
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml up -d --build"
    
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ç–∫–∏/—Ç–µ–≥–∞
deploy_branch() {
    if [ -z "$1" ]; then
        echo -e "${RED}‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ç–∫—É –∏–ª–∏ —Ç–µ–≥ –¥–ª—è –¥–µ–ø–ª–æ—è${NC}"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 deploy <branch|tag>"
        exit 1
    fi
    
    BRANCH_OR_TAG="$1"
    echo -e "${YELLOW}üöÄ –î–µ–ø–ª–æ–π –≤–µ—Ç–∫–∏/—Ç–µ–≥–∞: ${BRANCH_OR_TAG}${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    stop_app
    
    # –î–µ–ø–ª–æ–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≤–µ—Ç–∫—É/—Ç–µ–≥
    run_on_server "cd ${APP_PATH} && git fetch origin && git checkout ${BRANCH_OR_TAG} && git reset --hard origin/${BRANCH_OR_TAG} && git clean -fd"
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml up -d --build"
    
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ —Å –≤–µ—Ç–∫–∏/—Ç–µ–≥–∞: ${BRANCH_OR_TAG}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
create_backup() {
    echo -e "${YELLOW}üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
    
    BACKUP_FILE="backup_$(date +%Y%m%d_%H%M%S).sql"
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml exec -T postgres pg_dump -U contract_user contract_db > backups/${BACKUP_FILE}"
    
    echo -e "${GREEN}‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${BACKUP_FILE}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
update_ssl() {
    echo -e "${YELLOW}üîí –û–±–Ω–æ–≤–ª—è–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã...${NC}"
    
    run_on_server "certbot renew --quiet"
    run_on_server "cp /etc/letsencrypt/live/contract.alnilam.by/fullchain.pem ${APP_PATH}/nginx/ssl/"
    run_on_server "cp /etc/letsencrypt/live/contract.alnilam.by/privkey.pem ${APP_PATH}/nginx/ssl/"
    run_on_server "cd ${APP_PATH} && docker-compose -f docker-compose.prod.yaml restart nginx"
    
    echo -e "${GREEN}‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è shell –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
open_shell() {
    echo -e "${YELLOW}üêö –û—Ç–∫—Ä—ã–≤–∞–µ–º shell –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
    echo -e "${BLUE}–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É 'exit'${NC}"
    ssh ${SERVER_USER}@${SERVER_IP}
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    start)
        start_app
        ;;
    stop)
        stop_app
        ;;
    restart)
        restart_app
        ;;
    status)
        show_status
        ;;
    logs)
        show_logs
        ;;
    update)
        update_app
        ;;
    deploy)
        deploy_branch "$2"
        ;;
    backup)
        create_backup
        ;;
    ssl)
        update_ssl
        ;;
    shell)
        open_shell
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        show_help
        exit 1
        ;;
esac
