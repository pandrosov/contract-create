#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è contract.alnilam.by
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [production|staging]
#
# –õ–æ–≥–∏–∫–∞ –¥–µ–ø–ª–æ—è:
# 1. –ï—Å–ª–∏ –µ—Å—Ç—å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π - –∏—Å–ø–æ–ª—å–∑—É–µ–º Git (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
# 2. –ï—Å–ª–∏ –Ω–µ—Ç Git - fallback –Ω–∞ scp —Å –∞—Ä—Ö–∏–≤–æ–º
# 3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker, firewall, SSL

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_IP="185.179.83.236"
SERVER_USER="root"
DOMAIN="contract.alnilam.by"
ENVIRONMENT=${1:-production}
SSH_KEY="~/.ssh/id_rsa_deploy"

echo -e "${GREEN}üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä ${SERVER_IP}${NC}"
echo -e "${YELLOW}–î–æ–º–µ–Ω: ${DOMAIN}${NC}"
echo -e "${YELLOW}–û–∫—Ä—É–∂–µ–Ω–∏–µ: ${ENVIRONMENT}${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...${NC}"
if ! ssh -i ${SSH_KEY} -o ConnectTimeout=10 -o BatchMode=yes ${SERVER_USER}@${SERVER_IP} exit 2>/dev/null; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É ${SERVER_IP}${NC}"
    echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:${NC}"
    echo -e "   - –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ IP ${SERVER_IP}"
    echo -e "   - SSH –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    echo -e "   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${SERVER_USER} –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø"
    exit 1
fi

echo -e "${GREEN}‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å–ø–µ—à–Ω–æ${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Git
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º Git...${NC}"
if ! command -v git &> /dev/null; then
    echo -e "${RED}‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –¥–ª—è –¥–µ–ø–ª–æ—è${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Git –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é${NC}"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
mkdir -p /opt/contract-app
mkdir -p /opt/contract-app/nginx/ssl
mkdir -p /opt/contract-app/nginx/logs
mkdir -p /opt/contract-app/logs
mkdir -p /opt/contract-app/backups
mkdir -p /opt/contract-app/templates
EOF

echo -e "${GREEN}‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã${NC}"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
apt update
if apt install -y curl wget git ufw iptables-persistent net-tools iproute2; then
    echo "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –ø—Ä–æ–±—É–µ–º –±–µ–∑ ufw..."
    apt install -y curl wget git net-tools iproute2
    echo "–ë–∞–∑–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi
EOF

echo -e "${GREEN}‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:"
for tool in curl wget git netstat ss iptables ufw; do
    if command -v $tool &> /dev/null; then
        echo "‚úÖ $tool —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå $tool –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done
EOF

echo -e "${GREEN}‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã${NC}"

# –ö–ª–æ–Ω–∏—Ä—É–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Git —Å—Ç–∞—Ç—É—Å
if [ -d ".git" ]; then
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º Git —Å—Ç–∞—Ç—É—Å...${NC}"
    if [ -n "$(git status --porcelain)" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:${NC}"
        git status --short
        echo -e "${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º${NC}"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–ø–ª–æ–π? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            echo -e "${YELLOW}–î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.${NC}"
            exit 0
        fi
    else
        echo -e "${GREEN}‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if ! git remote get-url origin &> /dev/null; then
        echo -e "${RED}‚ùå –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
        echo -e "${YELLOW}–î–æ–±–∞–≤—å—Ç–µ remote origin: git remote add origin <url>${NC}"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∫–æ–º–º–∏—Ç—ã
    if ! git rev-parse HEAD &> /dev/null; then
        echo -e "${RED}‚ùå –ù–µ—Ç –∫–æ–º–º–∏—Ç–æ–≤ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏${NC}"
        echo -e "${YELLOW}–°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç: git add . && git commit -m 'Initial commit'${NC}"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —É–¥–∞–ª–µ–Ω–Ω–∞—è –≤–µ—Ç–∫–∞
    CURRENT_BRANCH=$(git branch --show-current 2>/dev/null || echo "master")
    if ! git ls-remote --heads origin ${CURRENT_BRANCH} | grep -q ${CURRENT_BRANCH}; then
        echo -e "${YELLOW}‚ö†Ô∏è  –í–µ—Ç–∫–∞ ${CURRENT_BRANCH} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏${NC}"
        echo -e "${YELLOW}–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–µ—Ç–∫—É: git push -u origin ${CURRENT_BRANCH}${NC}"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–ø–ª–æ–π? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            echo -e "${YELLOW}–î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–µ—Ç–∫—É.${NC}"
            exit 0
        fi
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    echo -e "${GREEN}‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é${NC}"
    echo -e "${BLUE}üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:${NC}"
    echo -e "  –í–µ—Ç–∫–∞: ${CURRENT_BRANCH}"
    echo -e "  –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log -1 --oneline)"
    echo -e "  –£–¥–∞–ª–µ–Ω–Ω—ã–π: $(git remote get-url origin)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ç–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞
    if [ "$(git rev-parse HEAD)" != "$(git rev-parse origin/${CURRENT_BRANCH} 2>/dev/null)" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å —É–¥–∞–ª–µ–Ω–Ω–æ–π${NC}"
        echo -e "${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: git pull origin ${CURRENT_BRANCH}${NC}"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–ø–ª–æ–π? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            echo -e "${YELLOW}–î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –≤–µ—Ç–∫—É.${NC}"
            exit 0
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ç–µ–≥–∏
    if git tag | wc -l | grep -q "0"; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ—Ç —Ç–µ–≥–æ–≤ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏${NC}"
        echo -e "${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å —Ç–µ–≥ –¥–ª—è –≤–µ—Ä—Å–∏–∏${NC}"
    else
        echo -e "${GREEN}‚úÖ –¢–µ–≥–∏ –Ω–∞–π–¥–µ–Ω—ã: $(git tag | tail -3 | tr '\n' ' ')"
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    echo -e "${BLUE}üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:${NC}"
    echo -e "  –í—Å–µ–≥–æ –∫–æ–º–º–∏—Ç–æ–≤: $(git rev-list --count HEAD)"
    echo -e "  –†–∞–∑–º–µ—Ä: $(du -sh .git | cut -f1)"
    echo -e "  –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: $(git log --since="1 week ago" --oneline | wc -l | tr -d ' ') –∑–∞ –Ω–µ–¥–µ–ª—é"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã
    echo -e "${BLUE}üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:${NC}"
    git log --oneline -5
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ç–∫–∞—Ö
    echo -e "${BLUE}üåø –í–µ—Ç–∫–∏:${NC}"
    git branch -r | head -5
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö
    echo -e "${BLUE}üìÅ –§–∞–π–ª—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:${NC}"
    echo -e "  –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: $(git ls-files | wc -l | tr -d ' ')"
    echo -e "  –†–∞–∑–º–µ—Ä –∫–æ–¥–∞: $(git ls-files | xargs du -ch 2>/dev/null | tail -1 | cut -f1)"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    echo -e "${BLUE}‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Git:${NC}"
    echo -e "  User: $(git config user.name 2>/dev/null || echo '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')"
    echo -e "  Email: $(git config user.email 2>/dev/null || echo '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')"
    echo -e "  Editor: $(git config core.editor 2>/dev/null || echo '–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é')"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –¥–µ–ø–ª–æ–µ
    echo -e "${BLUE}üöÄ –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–ø–ª–æ–π:${NC}"
    if [ -f ".deploy-info" ]; then
        echo -e "  $(cat .deploy-info)"
    else
        echo -e "  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–ª–æ–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
fi

# –ü–æ–ª—É—á–∞–µ–º URL —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
GIT_REMOTE_URL=$(git remote get-url origin 2>/dev/null || echo "")

if [ -z "$GIT_REMOTE_URL" ]; then
    echo -e "${YELLOW}Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ...${NC}"
    # Fallback –Ω–∞ scp –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –∏ –∫–æ–ø–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ scp...${NC}"
    tar -czf /tmp/app-backup.tar.gz --exclude='.git' --exclude='node_modules' --exclude='__pycache__' --exclude='.DS_Store' .
    scp -i ${SSH_KEY} /tmp/app-backup.tar.gz ${SERVER_USER}@${SERVER_IP}:/opt/contract-app/
    ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} "cd /opt/contract-app && tar -xzf app-backup.tar.gz && rm app-backup.tar.gz"
    rm /tmp/app-backup.tar.gz
    echo -e "${GREEN}‚úÖ –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ scp${NC}"
else
    echo -e "${GREEN}‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω: ${GIT_REMOTE_URL}${NC}"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
    CURRENT_BRANCH=$(git branch --show-current 2>/dev/null || echo "master")
    echo -e "${YELLOW}–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: ${CURRENT_BRANCH}${NC}"
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << EOF
        cd /opt/contract-app
        
        if [ -d ".git" ]; then
            echo "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
            git fetch origin
            git reset --hard origin/${CURRENT_BRANCH}
            git clean -fd
            echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
        else
            echo "–ö–ª–æ–Ω–∏—Ä—É–µ–º Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
            rm -rf * .[^.]* 2>/dev/null || true
            git clone -b ${CURRENT_BRANCH} ${GIT_REMOTE_URL} .
            echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
        fi
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
        chmod +x *.sh 2>/dev/null || true
        chmod +x app/*.sh 2>/dev/null || true
        chmod +x scripts/*.sh 2>/dev/null || true
EOF
    
    echo -e "${GREEN}‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ${NC}"
fi

echo -e "${GREEN}‚úÖ –§–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã${NC}"

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << EOF
cat > /opt/contract-app/.env << 'ENVEOF'
# Database Configuration
POSTGRES_PASSWORD=secure_password_$(openssl rand -hex 16)
DATABASE_URL=postgresql://contract_user:secure_password_$(openssl rand -hex 16)@postgres:5432/contract_db

# Security
SECRET_KEY=$(openssl rand -hex 32)
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Settings
CORS_ORIGINS=https://${DOMAIN},https://www.${DOMAIN}

# Frontend API URL
REACT_APP_API_URL=https://${DOMAIN}/api

# Domain Configuration
DOMAIN=${DOMAIN}

# SSL Certificate Paths
SSL_CERT_PATH=/etc/nginx/ssl/fullchain.pem
SSL_KEY_PATH=/etc/nginx/ssl/privkey.pem

# Logging
LOG_LEVEL=INFO
LOG_FILE=/app/logs/app.log

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=/app/backups
ENVEOF
EOF

echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∏ Docker Compose –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
if ! command -v docker &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    usermod -aG docker $USER
    systemctl enable docker
    systemctl start docker
fi

if ! command -v docker-compose &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
    curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
fi
EOF

echo -e "${GREEN}‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall
echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ufw –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if ! command -v ufw &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ufw..."
    apt update
    apt install -y ufw
fi

# –ü—Ä–æ–±—É–µ–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å ufw
if command -v ufw &> /dev/null; then
    echo "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º ufw..."
    ufw --force enable
    ufw default deny incoming
    ufw default allow outgoing
    ufw allow ssh
    ufw allow 80
    ufw allow 443
    ufw allow 8000
    ufw --force reload
    echo "ufw –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    echo "ufw –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º iptables..."
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ—Ä–µ–∑ iptables
    iptables -F
    iptables -X
    iptables -t nat -F
    iptables -t nat -X
    iptables -t mangle -F
    iptables -t mangle -X
    
    # –†–∞–∑—Ä–µ—à–∞–µ–º localhost
    iptables -A INPUT -i lo -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∞–µ–º SSH
    iptables -A INPUT -p tcp --dport 22 -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∞–µ–º HTTP –∏ HTTPS
    iptables -A INPUT -p tcp --dport 80 -j ACCEPT
    iptables -A INPUT -p tcp --dport 443 -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∞–µ–º –ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    iptables -A INPUT -p tcp --dport 8000 -j ACCEPT
    
    # –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ
    iptables -A INPUT -j DROP
    
    # –†–∞–∑—Ä–µ—à–∞–µ–º –∏—Å—Ö–æ–¥—è—â–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    iptables -A OUTPUT -j ACCEPT
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–∞–≤–∏–ª –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    mkdir -p /etc/iptables
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–∞
    iptables-save > /etc/iptables/rules.v4
    echo "iptables –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

echo "Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
EOF

echo -e "${GREEN}‚úÖ Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å firewall
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å firewall...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
echo "–°—Ç–∞—Ç—É—Å firewall:"
if command -v ufw &> /dev/null; then
    ufw status
else
    echo "iptables –ø—Ä–∞–≤–∏–ª–∞:"
    iptables -L -n
fi
EOF

echo -e "${GREEN}‚úÖ Firewall –ø—Ä–æ–≤–µ—Ä–µ–Ω${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã:"
for port in 22 80 443 8000; do
    if netstat -tlnp 2>/dev/null | grep ":$port " > /dev/null; then
        echo "‚úÖ –ü–æ—Ä—Ç $port –æ—Ç–∫—Ä—ã—Ç"
    elif ss -tlnp 2>/dev/null | grep ":$port " > /dev/null; then
        echo "‚úÖ –ü–æ—Ä—Ç $port –æ—Ç–∫—Ä—ã—Ç (ss)"
    else
        echo "‚ùå –ü–æ—Ä—Ç $port –∑–∞–∫—Ä—ã—Ç"
    fi
done
EOF

echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã${NC}"

# –°–æ–∑–¥–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (Let's Encrypt)
echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º certbot
apt update
apt install -y certbot

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π nginx –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
cat > /opt/contract-app/nginx/nginx-temp.conf << 'NGINXEOF'
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    server {
        listen 80;
        server_name contract.alnilam.by www.contract.alnilam.by;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
}
NGINXEOF

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
cd /opt/contract-app
docker-compose -f docker-compose.prod.yaml up -d nginx

# –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
certbot certonly --webroot --webroot-path=/var/www/certbot \
    --email admin@${DOMAIN} --agree-tos --no-eff-email \
    -d ${DOMAIN} -d www.${DOMAIN}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π nginx
docker-compose -f docker-compose.prod.yaml down

# –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
cp /etc/letsencrypt/live/${DOMAIN}/fullchain.pem /opt/contract-app/nginx/ssl/
cp /etc/letsencrypt/live/${DOMAIN}/privkey.pem /opt/contract-app/nginx/ssl/

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo "0 12 * * * /usr/bin/certbot renew --quiet && docker-compose -f /opt/contract-app/docker-compose.prod.yaml restart nginx" | crontab -
EOF

echo -e "${GREEN}‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo -e "${YELLOW}–ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
cd /opt/contract-app
docker-compose -f docker-compose.prod.yaml down
docker-compose -f docker-compose.prod.yaml up -d --build
EOF

echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_IP} << 'EOF'
cd /opt/contract-app
docker-compose -f docker-compose.prod.yaml ps
EOF

echo -e "${GREEN}üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
echo -e "${YELLOW}–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://${DOMAIN}${NC}"
echo -e "${YELLOW}API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://${DOMAIN}/api${NC}"
echo -e "${YELLOW}Health check: https://${DOMAIN}/health${NC}"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
echo -e "${YELLOW}–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏...${NC}"
ssh ${SERVER_USER}@${SERVER_IP} << 'EOF'
cd /opt/contract-app
docker-compose -f docker-compose.prod.yaml logs --tail=20
EOF
