#!/bin/bash

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –ø–∞—Ä–æ–ª–µ–π
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy_with_sync.sh

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –ø–∞—Ä–æ–ª–µ–π..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
check_files() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    local required_files=(
        ".env"
        "docker-compose.prod.yaml"
        "scripts/sync_passwords.sh"
    )
    
    for file in "${required_files[@]}"; do
        if [ ! -f "$file" ]; then
            log_error "–§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
        fi
    done
    
    log_success "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"
}

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
sync_passwords() {
    log_info "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π..."
    
    if ./scripts/sync_passwords.sh; then
        log_success "–ü–∞—Ä–æ–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
    else
        log_error "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Git —Å—Ç–∞—Ç—É—Å
check_git_status() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Å—Ç–∞—Ç—É—Å–∞..."
    
    if [ -n "$(git status --porcelain)" ]; then
        log_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git"
        git status --short
        
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–ø–ª–æ–π? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            log_info "–î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
            exit 0
        fi
    else
        log_success "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —á–∏—Å—Ç"
    fi
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
stop_containers() {
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    if docker-compose -f docker-compose.prod.yaml down; then
        log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log_warning "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã)"
    fi
}

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
rebuild_containers() {
    log_info "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º backend —Å –Ω–æ–≤—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
    if docker-compose -f docker-compose.prod.yaml build backend; then
        log_success "Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω"
    else
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–µ backend"
        exit 1
    fi
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend
    if docker-compose -f docker-compose.prod.yaml build frontend; then
        log_success "Frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω"
    else
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–µ frontend"
        exit 1
    fi
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º nginx
    if docker-compose -f docker-compose.prod.yaml build nginx; then
        log_success "Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω"
    else
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–µ nginx"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
start_containers() {
    log_info "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    if docker-compose -f docker-compose.prod.yaml up -d; then
        log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
    else
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
health_check() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º backend
    if curl -s http://localhost:8000/health > /dev/null; then
        log_success "Backend —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_error "Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend
    if curl -s http://localhost:3000 > /dev/null; then
        log_success "Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_warning "Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–≤–æ–∑–º–æ–∂–Ω–æ, –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx
    if curl -s http://localhost > /dev/null; then
        log_success "Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_warning "Nginx –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–≤–æ–∑–º–æ–∂–Ω–æ, –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)"
    fi
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
show_status() {
    log_info "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.prod.yaml ps
    
    log_info "–õ–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
    docker logs contract-backend --tail 10
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –¥–µ–ø–ª–æ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    check_files
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
    sync_passwords
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Git —Å—Ç–∞—Ç—É—Å
    check_git_status
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    stop_containers
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    rebuild_containers
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    start_containers
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
    if health_check; then
        log_success "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    else
        log_warning "‚ö†Ô∏è –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    show_status
    
    log_info "üí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost"
    log_info "üîß Backend API: http://localhost:8000"
    log_info "üì± Frontend: http://localhost:3000"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"
