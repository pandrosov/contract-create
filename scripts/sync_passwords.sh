#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π –º–µ–∂–¥—É .env –∏ docker-compose.prod.yaml
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/sync_passwords.sh

set -e

echo "üîê –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose.prod.yaml
if [ ! -f "docker-compose.prod.yaml" ]; then
    echo "‚ùå –§–∞–π–ª docker-compose.prod.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é docker-compose.prod.yaml
cp docker-compose.prod.yaml docker-compose.prod.yaml.backup
echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è docker-compose.prod.yaml"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –≤ docker-compose —Ñ–∞–π–ª–µ
update_password_in_compose() {
    local env_file=".env"
    local compose_file="docker-compose.prod.yaml"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º POSTGRES_PASSWORD –∏–∑ .env
    if grep -q "^POSTGRES_PASSWORD=" "$env_file"; then
        POSTGRES_PASSWORD=$(grep "^POSTGRES_PASSWORD=" "$env_file" | cut -d'=' -f2)
        echo "üìù –ù–∞–π–¥–µ–Ω POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:0:10}..."
        
        # –û–±–Ω–æ–≤–ª—è–µ–º POSTGRES_PASSWORD –≤ docker-compose.prod.yaml (macOS —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)
        if [[ "$OSTYPE" == "darwin"* ]]; then
            # macOS
            sed -i '' "s/POSTGRES_PASSWORD: \${POSTGRES_PASSWORD:-.*}/POSTGRES_PASSWORD: \${POSTGRES_PASSWORD:-$POSTGRES_PASSWORD}/" "$compose_file"
            sed -i '' "s|DATABASE_URL=postgresql://contract_user:\${POSTGRES_PASSWORD:-.*}@postgres:5432/contract_db|DATABASE_URL=postgresql://contract_user:\${POSTGRES_PASSWORD:-$POSTGRES_PASSWORD}@postgres:5432/contract_db|" "$compose_file"
        else
            # Linux
            sed -i "s/POSTGRES_PASSWORD: \${POSTGRES_PASSWORD:-.*}/POSTGRES_PASSWORD: \${POSTGRES_PASSWORD:-$POSTGRES_PASSWORD}/" "$compose_file"
            sed -i "s|DATABASE_URL=postgresql://contract_user:\${POSTGRES_PASSWORD:-.*}@postgres:5432/contract_db|DATABASE_URL=postgresql://contract_user:\${POSTGRES_PASSWORD:-$POSTGRES_PASSWORD}@postgres:5432/contract_db|" "$compose_file"
        fi
        
        echo "‚úÖ –ü–∞—Ä–æ–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ docker-compose.prod.yaml"
    else
        echo "‚ö†Ô∏è POSTGRES_PASSWORD –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
check_sync() {
    local env_file=".env"
    local compose_file="docker-compose.prod.yaml"
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–æ–ª–∏
    ENV_PASSWORD=$(grep "^POSTGRES_PASSWORD=" "$env_file" | cut -d'=' -f2)
    COMPOSE_PASSWORD=$(grep "POSTGRES_PASSWORD:" "$compose_file" | head -1 | sed 's/.*POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-\([^}]*\)}/\1/')
    
    if [ "$ENV_PASSWORD" = "$COMPOSE_PASSWORD" ]; then
        echo "‚úÖ –ü–∞—Ä–æ–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: ${ENV_PASSWORD:0:10}..."
    else
        echo "‚ùå –ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!"
        echo "   .env: ${ENV_PASSWORD:0:10}..."
        echo "   docker-compose: ${COMPOSE_PASSWORD:0:10}..."
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø–∞—Ä–æ–ª–µ–π..."

# –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª–∏
update_password_in_compose

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if check_sync; then
    echo "üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–µ–ø–ª–æ–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π!"
    echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
    cp docker-compose.prod.yaml.backup docker-compose.prod.yaml
    exit 1
fi

# –£–¥–∞–ª—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
rm -f docker-compose.prod.yaml.backup
echo "üßπ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —É–¥–∞–ª–µ–Ω–∞"
